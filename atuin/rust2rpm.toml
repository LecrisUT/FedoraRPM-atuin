#! NOTE: the spec file generated from this rust2rpm.toml is not intended to be the final result. This is meant to be
#  used only as an initial guide
#  Fixes to be done on top:
#   - Fix the License tag
#   - Add the `all-users` sub-package
#   - Remove the %cargo_install macro

[features]
enable-all = true

[package]
url = "https://atuin.sh"
source-url = "https://github.com/atuinsh/atuin/archive/refs/tags/%{version}.tar.gz"
extra-files = [
    "%{bash_completions_dir}/atuin.bash",
    "%{fish_completions_dir}/atuin.fish",
    "%{zsh_completions_dir}/_atuin",
    "%{_libexecdir}/atuin",
]

summary = "Magical shell history"

description = """
Atuin replaces your existing shell history with a SQLite database, and records
additional context for your commands. Additionally, it provides optional and
fully encrypted synchronization of your history between machines, via an Atuin
server.
"""

[[package.extra-patches]]
comments = [
    "Bump metrics dependencies",
    "Cherry-picked from https://github.com/atuinsh/atuin/pull/2062",
]
file = "atuin-fix-metrics.patch"
number = 12

[[package.extra-patches]]
comments = [
    "Update tiny-bip39 to 2.0.0",
    "Cherry-picked https://github.com/atuinsh/atuin/pull/2643",
]
file = "atuin-Update-tiny-bip39.patch"
number = 13

[requires]
# TODO: make it a requires when it is packaged
#bin = [
#    "bash-preexec",
#]
test = [
    "postgresql-test-rpm-macros",
]
build = [
    "tomcli",
]

[scripts]
prep.post = [
    "# Relax minijinja requirement",
    "tomcli set Cargo.toml str workspace.dependencies.minijinja '2.8.0'",
    "# Drop divan. Seems like benchmark-only dependency",
    "tomcli set crates/atuin-history/Cargo.toml del dev-dependencies.divan",
]
check.pre = [
    "# start a postgres instance for the tests to use",
    "export PGTESTS_LOCALE=\"C.UTF-8\"",
    "export PGTESTS_USERS=\"atuin:pass\"",
    "export PGTESTS_DATABASES=\"atuin:atuin\"",
    "export PGTESTS_PORT=5432",
    "%postgresql_tests_run",
]
build.post = [
    "# Create auxiliary files",
    "mkdir -p other_installs/shell_completion",
    "# Generate all shell-completions",
    "for shell in bash fish zsh; do",
    "  ./target/rpm/atuin gen-completions --shell ${shell} -o other_installs/shell_completion",
    "done",
    "",
    "# Write the atuin init scripts statically",
    "mkdir -p other_installs/libexec/atuin",
    "for shell in bash fish zsh; do",
    "  ./target/rpm/atuin init ${shell} > other_installs/libexec/atuin/atuin-init.${shell}",
    "done",
    "",
    "# Write the profile.d files enabling the install for all users",
    "# Currently only bash is supported",
    "mkdir -p other_installs/profile.d",
    "cat > other_installs/profile.d/atuin.sh <<EOF",
    "# atuin initialization script for all users",
    "",
    "# Check for bash environment",
    'if [ -n "\${BASH_VERSION-}" ]; then',
    "  # Skip noninteractive shells.",
    '  [[ \$- != *i* ]] && return',
    "",
    "  # Use the statically written atuin init script",
    "  source %{_libexecdir}/atuin/atuin-init.bash",
    "",
    "# Check for zsh environment",
    'elif [ -n "\$ZSH_VERSION-}" ]; then',
    "  # Skip noninteractive shells.",
    '  [[ \$- != *i* ]] && return',
    "",
    "  # The /etc/zprofile script calls 'emulate -L ksh', to make zsh",
    "  # happier when sourcing files in /etc/profile.d. However, atuin",
    "  # needs some zsh-specific functions (i.e. compinit), so we emulate",
    "  # zsh when sourcing the statically written atuin init script. See",
    "  # /etc/zprofile or 'man zshbuiltins' for more details.",
    '  emulate zsh -c "source %{_libexecdir}/atuin/atuin-init.zsh"',
    "fi",
    "EOF",
]
install.post = [
    "install -Dpm 0755 target/rpm/atuin -t %{buildroot}%{_bindir}",
    "# Install the auxiliary files",
    "# Shell completions",
    "install -Dpm 0644 other_installs/shell_completion/atuin.bash -t %{buildroot}%{bash_completions_dir}",
    "install -Dpm 0644 other_installs/shell_completion/atuin.fish -t %{buildroot}%{fish_completions_dir}",
    "install -Dpm 0644 other_installs/shell_completion/_atuin -t %{buildroot}%{zsh_completions_dir}",
    "",
    "# Static atuin init scripts",
    "for shell in bash fish zsh; do",
    "  install -Dpm 0755 other_installs/libexec/atuin/atuin-init.${shell} %{buildroot}%{_libexecdir}/atuin/atuin-init.${shell}",
    "done",
    "# Profile.d init script for all users",
    "install -Dpm 0755 other_installs/profile.d/atuin.sh %{buildroot}%{_sysconfdir}/profile.d/atuin.sh",
]
